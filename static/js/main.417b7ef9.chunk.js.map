{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","handleClick","TodoFilter","setFilter","query","setQuery","onChange","event","target","value","Object","keys","key","charAt","toUpperCase","slice","toLowerCase","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","response","ok","Error","status","statusText","json","TodoModal","close","useState","user","setUser","useEffect","userId","href","email","name","App","loading","setLoading","setTodos","ALL","filter","errorMessage","setErrorMessage","catch","finally","filteredTodos","ACTIVE","COMPLETED","visibleTodos","useMemo","trim","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.417b7ef9.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectedTodo, setSelectedTodo,\n}) => {\n  const handleClick = (todo: Todo) => {\n    if (setSelectedTodo) {\n      setSelectedTodo(todo);\n    }\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={classNames({\n              'has-background-info-light': selectedTodo !== null\n                                            && selectedTodo.id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={\n                    selectedTodo !== null && selectedTodo.id === todo.id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'\n                  }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  setFilter: (value: Status) => void;\n  query: string\n  setQuery: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter, query, setQuery,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value as Status);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleClearQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterChange}\n          >\n\n            {(Object.keys(Status) as Array<keyof typeof Status>).map(key => (\n              <option value={Status[key]}>\n                {key.charAt(0).toUpperCase() + key.slice(1).toLowerCase()}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearQuery}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo;\n  close: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  close,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={close}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState(Status.ALL);\n  const [query, setQuery] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .catch(() => setErrorMessage('There are no todos'))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const filteredTodos = todos.filter(todo => {\n    switch (filter) {\n      case Status.ACTIVE: return !todo.completed;\n\n      case Status.COMPLETED: return todo.completed;\n\n      default: return true;\n    }\n  });\n\n  const visibleTodos = useMemo(() => {\n    if (query.trim()) {\n      return filteredTodos.filter(todo => todo.title.toLowerCase()\n        .includes(query.toLowerCase()));\n    }\n\n    return filteredTodos;\n  }, [todos, filter, query]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              ) : (\n                <p>\n                  {errorMessage}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          close={() => setSelectedTodo(null)}\n        />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}